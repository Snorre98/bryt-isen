{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\n\nconst useCountDown = (timeToCount = 60 * 1000, interval = 1000) => {\n  const [timeLeft, setTimeLeft] = React.useState(0);\n  const timer = React.useRef({});\n\n  const run = (ts) => {\n    if (!timer.current.started) {\n      timer.current.started = ts;\n      timer.current.lastInterval = ts;\n    }\n\n    const localInterval = Math.min(interval, (timer.current.timeLeft || Infinity));\n    if ((ts - timer.current.lastInterval) >= localInterval) {\n      timer.current.lastInterval += localInterval;\n      setTimeLeft((timeLeft) => {\n        timer.current.timeLeft = timeLeft - localInterval;\n        return timer.current.timeLeft;\n      });\n    }\n\n    if (ts - timer.current.started < timer.current.timeToCount) {\n      timer.current.requestId = window.requestAnimationFrame(run);\n    } else {\n      timer.current = {};\n      setTimeLeft(0);\n    }\n  }\n\n  const start = React.useCallback(\n    (ttc) => {\n      window.cancelAnimationFrame(timer.current.requestId);\n\n      const newTimeToCount = ttc !== undefined ? ttc : timeToCount\n      timer.current.started = null;\n      timer.current.lastInterval = null;\n      timer.current.timeToCount = newTimeToCount;\n      timer.current.requestId = window.requestAnimationFrame(run);\n\n      setTimeLeft(newTimeToCount);\n    },\n    [],\n  );\n\n  const pause = React.useCallback(\n    () => {\n      window.cancelAnimationFrame(timer.current.requestId);\n      timer.current.started = null;\n      timer.current.lastInterval = null;\n      timer.current.timeToCount = timer.current.timeLeft;\n    },\n    [],\n  );\n\n  const resume = React.useCallback(\n    () => {\n      if (!timer.current.started && timer.current.timeLeft > 0) {\n        window.cancelAnimationFrame(timer.current.requestId);\n        timer.current.requestId = window.requestAnimationFrame(run);\n      }\n    },\n    [],\n  );\n\n  const reset = React.useCallback(\n    () => {\n      if (timer.current.timeLeft) {\n        window.cancelAnimationFrame(timer.current.requestId);\n        timer.current = {};\n        setTimeLeft(0);\n      }\n    },\n    [],\n  );\n\n  const actions = React.useMemo(\n    () => ({ start, pause, resume, reset }),\n    [],\n  );\n\n  React.useEffect(() => {\n    return () => window.cancelAnimationFrame(timer.current.requestId);\n  }, []);\n\n  return [timeLeft, actions];\n}\n\nexport default useCountDown;\n"],"names":["timeToCount","interval","timeLeft","setTimeLeft","React","useState","timer","useRef","run","ts","current","started","lastInterval","localInterval","Math","min","Infinity","requestId","window","requestAnimationFrame","start","useCallback","ttc","cancelAnimationFrame","newTimeToCount","undefined","pause","resume","reset","actions","useMemo","useEffect"],"mappings":"mCAEqB,CAACA,EAAc,IAAWC,EAAW,OACxD,MAAOC,EAAUC,GAAeC,EAAMC,SAAS,GACzCC,EAAQF,EAAMG,OAAO,IAErBC,EAAOC,IACNH,EAAMI,QAAQC,UACjBL,EAAMI,QAAQC,QAAUF,EACxBH,EAAMI,QAAQE,aAAeH,GAG/B,MAAMI,EAAgBC,KAAKC,IAAId,EAAWK,EAAMI,QAAQR,UAAYc,UAC/DP,EAAKH,EAAMI,QAAQE,cAAiBC,IACvCP,EAAMI,QAAQE,cAAgBC,EAC9BV,EAAaD,IACXI,EAAMI,QAAQR,SAAWA,EAAWW,EAC7BP,EAAMI,QAAQR,YAIrBO,EAAKH,EAAMI,QAAQC,QAAUL,EAAMI,QAAQV,YAC7CM,EAAMI,QAAQO,UAAYC,OAAOC,sBAAsBX,IAEvDF,EAAMI,QAAU,GAChBP,EAAY,KAIViB,EAAQhB,EAAMiB,YACjBC,IACCJ,OAAOK,qBAAqBjB,EAAMI,QAAQO,WAE1C,MAAMO,OAAyBC,IAARH,EAAoBA,EAAMtB,EACjDM,EAAMI,QAAQC,QAAU,KACxBL,EAAMI,QAAQE,aAAe,KAC7BN,EAAMI,QAAQV,YAAcwB,EAC5BlB,EAAMI,QAAQO,UAAYC,OAAOC,sBAAsBX,GAEvDL,EAAYqB,IAEd,IAGIE,EAAQtB,EAAMiB,YAClB,KACEH,OAAOK,qBAAqBjB,EAAMI,QAAQO,WAC1CX,EAAMI,QAAQC,QAAU,KACxBL,EAAMI,QAAQE,aAAe,KAC7BN,EAAMI,QAAQV,YAAcM,EAAMI,QAAQR,UAE5C,IAGIyB,EAASvB,EAAMiB,YACnB,MACOf,EAAMI,QAAQC,SAAWL,EAAMI,QAAQR,SAAW,IACrDgB,OAAOK,qBAAqBjB,EAAMI,QAAQO,WAC1CX,EAAMI,QAAQO,UAAYC,OAAOC,sBAAsBX,KAG3D,IAGIoB,EAAQxB,EAAMiB,YAClB,KACMf,EAAMI,QAAQR,WAChBgB,OAAOK,qBAAqBjB,EAAMI,QAAQO,WAC1CX,EAAMI,QAAU,GAChBP,EAAY,KAGhB,IAGI0B,EAAUzB,EAAM0B,QACpB,MAASV,MAAAA,EAAOM,MAAAA,EAAOC,OAAAA,EAAQC,MAAAA,IAC/B,IAOF,OAJAxB,EAAM2B,UAAU,IACP,IAAMb,OAAOK,qBAAqBjB,EAAMI,QAAQO,WACtD,IAEI,CAACf,EAAU2B"}